require("dotenv").config();
const { Telegraf, session } = require("telegraf");
const fetch = require("node-fetch");

const bot = new Telegraf(process.env.BOT_TOKEN);
const ADMIN_ID = Number(process.env.ADMIN_ID); // –∏–∑ .env
bot.use(session());

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏
const COMMISSION = 1.3; // 30%
const SESSION_TIMEOUT = 10 * 60 * 1000; // 10 –º–∏–Ω—É—Ç

// –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è: forwardedMessageId ‚Üí userChatId
const pendingQuestions = new Map();

// –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –µ–≤—Ä–æ
async function getRate() {
  try {
    const res = await fetch("https://www.cbr-xml-daily.ru/daily_json.js");
    const json = await res.json();
    return json.Valute.EUR.Value;
  } catch {
    return 100;
  }
}

// Middleware: –∞–≤—Ç–æ‚Äë—Å–±—Ä–æ—Å –ø–æ —Ç–∞–π–º–∞—É—Ç—É
bot.use((ctx, next) => {
  const now = Date.now();
  if (!ctx.session) ctx.session = {};
  if (ctx.session.last && now - ctx.session.last > SESSION_TIMEOUT) {
    ctx.session = {};
  }
  ctx.session.last = now;
  return next();
});

// 1) –ü–µ—Ä–µ—Ö–≤–∞—Ç –æ—Ç–≤–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á–µ–π –≤–æ–ø—Ä–æ—Å –æ–Ω –æ—Ç–≤–µ—á–∞–ª
bot.on("message", async (ctx, next) => {
  const replyTo = ctx.message.reply_to_message;
  if (
    ctx.chat.id === ADMIN_ID &&
    replyTo &&
    pendingQuestions.has(replyTo.message_id)
  ) {
    const userId = pendingQuestions.get(replyTo.message_id);
    const answer = ctx.message.text;
    // —à–ª—ë–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await ctx.telegram.sendMessage(userId, `üí¨ –û—Ç–≤–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n\n${answer}`);
    // —É–≤–µ–¥–æ–º–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    await ctx.reply("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.");
    // —É–¥–∞–ª—è–µ–º –∏–∑ –æ—á–µ—Ä–µ–¥–∏
    pendingQuestions.delete(replyTo.message_id);
    return;
  }
  return next();
});

// /ask ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å
bot.command("ask", (ctx) => {
  ctx.session = { mode: "ask" };
  return ctx.reply("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É.");
});

// /start ‚Äî —Å—Ä–∞–∑—É –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤ —Ä–µ–∂–∏–º —Ä–∞—Å—á—ë—Ç–∞
bot.start((ctx) => {
  ctx.session = { mode: "calc" };
  return ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ –∏–∑ –ì–µ—Ä–º–∞–Ω–∏–∏ üá©üá™\n\n" +
      "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –≤ –µ–≤—Ä–æ:"
  );
});

// /rate ‚Äî —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å
bot.command("rate", async (ctx) => {
  const rate = await getRate();
  return ctx.reply(`–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –µ–≤—Ä–æ: *${rate.toFixed(2)}* ‚ÇΩ/‚Ç¨`, {
    parse_mode: "Markdown",
  });
});

// /info ‚Äî —É—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –∫–æ–º–∏—Å—Å–∏–∏
bot.command("info", (ctx) => {
  return ctx.reply(
    `üßæ *–£—Å–ª–æ–≤–∏—è –∑–∞–∫–∞–∑–∞:* \n` +
      `‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è: _30%_ (–≤–∫–ª—é—á–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É –¥–æ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞)\n` +
      `‚Ä¢ –ö—Ä—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã (6+ –≤–µ—â–µ–π, —Ç–µ—Ö–Ω–∏–∫–∞, –æ–±—É–≤—å) ‚Äî –¥–æ–ø–ª–∞—Ç–∞ _1000 ‚ÇΩ/–∫–≥_\n` +
      `‚Ä¢ –ö—É—Ä—Å –±–µ—Ä—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –¶–ë –†–§\n`,
    { parse_mode: "Markdown" }
  );
});

// /help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
bot.command("help", (ctx) => {
  return ctx.reply(
    `/start   ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n` +
      `/rate    ‚Äî —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –µ–≤—Ä–æ\n` +
      `/info    ‚Äî —É—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –∫–æ–º–∏—Å—Å–∏–∏\n` +
      `/ask     ‚Äî –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É\n` +
      `/help    ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ`
  );
});

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞: —Ä–µ–∂–∏–º—ã ask –∏ calc
bot.on("text", async (ctx) => {
  const txt = ctx.message.text.trim().replace(",", ".");

  // –†–µ–∂–∏–º ¬´ask¬ª ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —Ñ–æ—Ä–≤–∞—Ä–¥–∏–º –≤–æ–ø—Ä–æ—Å
  if (ctx.session.mode === "ask") {
    const forwarded = await ctx.forwardMessage(
      ADMIN_ID,
      ctx.chat.id,
      ctx.message.message_id
    );
    // –∑–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –æ—Ç–≤–µ—Ç–∏—Ç—å
    pendingQuestions.set(forwarded.message_id, ctx.chat.id);

    await ctx.reply(
      "–°–ø–∞—Å–∏–±–æ! –í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É ‚Äî –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –∑–¥–µ—Å—å."
    );
    ctx.session = {};
    return;
  }

  // –†–µ–∂–∏–º ¬´calc¬ª ‚Äî –¥–≤–∞ —à–∞–≥–∞: —Å—É–º–º–∞ ‚Üí –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
  if (ctx.session.mode === "calc") {
    // —à–∞–≥ 1: –≤–≤–æ–¥ —Å—É–º–º—ã
    if (!ctx.session.amount) {
      const amount = parseFloat(txt);
      if (isNaN(amount) || amount <= 0) {
        return ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤ –µ–≤—Ä–æ:");
      }
      ctx.session.amount = amount;
      ctx.session.awaiting = "count";
      return ctx.reply("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—â–µ–π:");
    }

    // —à–∞–≥ 2: –≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    if (ctx.session.awaiting === "count" && !ctx.session.count) {
      const count = parseInt(txt, 10);
      if (isNaN(count) || count <= 0) {
        return ctx.reply(
          "–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—â–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä: 3"
        );
      }
      ctx.session.count = count;

      // —Å—á–∏—Ç–∞–µ–º –∏—Ç–æ–≥
      const rate = await getRate();
      const total = Math.round(ctx.session.amount * rate * COMMISSION);
      const note =
        count <= 5
          ? "‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞."
          : "‚ö†Ô∏è –î–ª—è –∫—Ä—É–ø–Ω–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã—Ö –∏–ª–∏ —Ç—è–∂–µ–ª—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –≤–æ–∑–º–æ–∂–Ω–∞ –¥–æ–ø–ª–∞—Ç–∞ 1000‚ÄØ‚ÇΩ/–∫–≥.";

      await ctx.reply(
        `üì¶ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${ctx.session.amount} ‚Ç¨\n` +
          `üëï –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—â–µ–π: ${count}\n` +
          `üí∂ –ö—É—Ä—Å: ${rate.toFixed(2)} ‚ÇΩ/‚Ç¨\n` +
          `‚û°Ô∏è –ò—Ç–æ–≥–æ: ${total.toLocaleString("ru-RU")} ‚ÇΩ\n\n` +
          note
      );

      ctx.session = {};
      return;
    }
  }

  // –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω —Ä–µ–∂–∏–º –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
  return ctx.reply(
    "–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–ª–∏ /ask, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n" +
      "–î–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ ‚Äî /help"
  );
});

// –ó–∞–ø—É—Å–∫
bot.launch();
console.log("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
(async () => {
  await bot.telegram.setMyCommands([
    { command: "/start", description: "–ù–∞—á–∞—Ç—å —Ä–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏" },
    { command: "/rate", description: "–£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –µ–≤—Ä–æ" },
    { command: "/info", description: "–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –∫–æ–º–∏—Å—Å–∏–∏" },
    { command: "/ask", description: "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É" },
    { command: "/help", description: "–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É" },
  ]);
})();

// –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–∞–¥–µ–Ω–∏–π
process.on("unhandledRejection", console.error);
process.on("uncaughtException", console.error);
